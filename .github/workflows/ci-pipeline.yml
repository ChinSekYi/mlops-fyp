
name: CI - pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  ci:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    # --- Define MLflow service ---
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: mlflow
          POSTGRES_PASSWORD: mlflow
          POSTGRES_DB: mlflowdb
        options: >-
          --health-cmd "pg_isready -U mlflow -d mlflowdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # minio:
      #   image: minio/minio:latest
      #   ports:
      #     - 9000:9000
      #     - 9001:9001
      #   env:
      #     MINIO_ROOT_USER: minio
      #     MINIO_ROOT_PASSWORD: minio123
      #   options: >-
      #     --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
      #     --health-interval 5s
      #     --health-timeout 5s
      #     --health-retries 5
      #     --entrypoint sh -c "minio server /data --console-address ':9001'"

      mlflow:
        image: sychin0606/mlflow-server:latest
        ports:
          - 5051:5050
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          ARTIFACT_ROOT: s3://${{ secrets.S3_BUCKET }}/mlflow-artifacts
        options: >-
          --health-cmd "curl -f http://localhost:5051 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --entrypoint sh -- -c "until pg_isready -h postgres -U mlflow; do sleep 2; done; mlflow server --host 0.0.0.0 --port 5051 --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflowdb --default-artifact-root $ARTIFACT_ROOT"


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.11"
     
      # - name: Install DVC with S3 support and requirements
      #   run: |
      #     pip install dvc[s3]==3.2.2
      #     pip install -r requirements/ci.txt

      # - name: Pull dataset from DVC
      #   run: dvc pull data/raw/creditcard-dev.csv

      # - name: Load environment variables
      #   run: |
      #     cat .env.ci >> $GITHUB_ENV
      #     echo "ENV_FILE=.env.ci" >> $GITHUB_ENV

      # - name: Run quality checks
      #   run: make check

      # - name: Run pipeline
      #   run: make run-pipeline

      # --- Step 4: Run tests ---
      #- name: Run pytest
      #  run:  make test
